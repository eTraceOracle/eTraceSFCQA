'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace eTraceSMTService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="eTraceSMTServiceSoap", [Namespace]:="http://tempuri.org/eTrace_SMT/eTraceSMTService")>  _
    Partial Public Class eTraceSMTService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ErrorLoggingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFeederInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ClearFeederInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReadCLIDsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PostFeederSetupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private postMachineSetupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private postChangeFeederOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMachineInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChangeReelinBankOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChangeReelinTableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StartMachineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ClearFeederOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOrderInfoFromSAPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveSMTMasterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSpecOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMachineOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFeederOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFeederTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveFeederTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Del_SMTMasterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.eTrace_SFC_.My.MySettings.Default.eTrace_SFC__eTraceSMTService_eTraceSMTService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ErrorLoggingCompleted As ErrorLoggingCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFeederInfoCompleted As GetFeederInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event ClearFeederInfoCompleted As ClearFeederInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event ReadCLIDsCompleted As ReadCLIDsCompletedEventHandler
        
        '''<remarks/>
        Public Event PostFeederSetupCompleted As PostFeederSetupCompletedEventHandler
        
        '''<remarks/>
        Public Event postMachineSetupCompleted As postMachineSetupCompletedEventHandler
        
        '''<remarks/>
        Public Event postChangeFeederCompleted As postChangeFeederCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMachineInfoCompleted As GetMachineInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event ChangeReelinBankCompleted As ChangeReelinBankCompletedEventHandler
        
        '''<remarks/>
        Public Event ChangeReelinTableCompleted As ChangeReelinTableCompletedEventHandler
        
        '''<remarks/>
        Public Event StartMachineCompleted As StartMachineCompletedEventHandler
        
        '''<remarks/>
        Public Event ClearFeederCompleted As ClearFeederCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOrderInfoFromSAPCompleted As GetOrderInfoFromSAPCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveSMTMasterCompleted As SaveSMTMasterCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSpecCompleted As GetSpecCompletedEventHandler
        
        '''<remarks/>
        Public Event GetIDCompleted As GetIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMachineCompleted As GetMachineCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFeederCompleted As GetFeederCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFeederTypeCompleted As GetFeederTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveFeederTypeCompleted As SaveFeederTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileListCompleted As GetFileListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileInfoCompleted As GetFileInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event Del_SMTMasterCompleted As Del_SMTMasterCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/ErrorLogging", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ErrorLogging(ByVal ModuleName As String, ByVal User As String, ByVal ErrMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("ErrorLogging", New Object() {ModuleName, User, ErrMsg})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ErrorLoggingAsync(ByVal ModuleName As String, ByVal User As String, ByVal ErrMsg As String)
            Me.ErrorLoggingAsync(ModuleName, User, ErrMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ErrorLoggingAsync(ByVal ModuleName As String, ByVal User As String, ByVal ErrMsg As String, ByVal userState As Object)
            If (Me.ErrorLoggingOperationCompleted Is Nothing) Then
                Me.ErrorLoggingOperationCompleted = AddressOf Me.OnErrorLoggingOperationCompleted
            End If
            Me.InvokeAsync("ErrorLogging", New Object() {ModuleName, User, ErrMsg}, Me.ErrorLoggingOperationCompleted, userState)
        End Sub
        
        Private Sub OnErrorLoggingOperationCompleted(ByVal arg As Object)
            If (Not (Me.ErrorLoggingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ErrorLoggingCompleted(Me, New ErrorLoggingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/GetFeederInfo", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFeederInfo(ByVal FeederID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetFeederInfo", New Object() {FeederID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFeederInfoAsync(ByVal FeederID As String)
            Me.GetFeederInfoAsync(FeederID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFeederInfoAsync(ByVal FeederID As String, ByVal userState As Object)
            If (Me.GetFeederInfoOperationCompleted Is Nothing) Then
                Me.GetFeederInfoOperationCompleted = AddressOf Me.OnGetFeederInfoOperationCompleted
            End If
            Me.InvokeAsync("GetFeederInfo", New Object() {FeederID}, Me.GetFeederInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFeederInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFeederInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFeederInfoCompleted(Me, New GetFeederInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/ClearFeederInfo", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ClearFeederInfo(ByVal FeederID As String) As Boolean
            Dim results() As Object = Me.Invoke("ClearFeederInfo", New Object() {FeederID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ClearFeederInfoAsync(ByVal FeederID As String)
            Me.ClearFeederInfoAsync(FeederID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ClearFeederInfoAsync(ByVal FeederID As String, ByVal userState As Object)
            If (Me.ClearFeederInfoOperationCompleted Is Nothing) Then
                Me.ClearFeederInfoOperationCompleted = AddressOf Me.OnClearFeederInfoOperationCompleted
            End If
            Me.InvokeAsync("ClearFeederInfo", New Object() {FeederID}, Me.ClearFeederInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnClearFeederInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ClearFeederInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ClearFeederInfoCompleted(Me, New ClearFeederInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/ReadCLIDs", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReadCLIDs(ByVal CLID As String, ByVal SourceSType As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ReadCLIDs", New Object() {CLID, SourceSType})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReadCLIDsAsync(ByVal CLID As String, ByVal SourceSType As String)
            Me.ReadCLIDsAsync(CLID, SourceSType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReadCLIDsAsync(ByVal CLID As String, ByVal SourceSType As String, ByVal userState As Object)
            If (Me.ReadCLIDsOperationCompleted Is Nothing) Then
                Me.ReadCLIDsOperationCompleted = AddressOf Me.OnReadCLIDsOperationCompleted
            End If
            Me.InvokeAsync("ReadCLIDs", New Object() {CLID, SourceSType}, Me.ReadCLIDsOperationCompleted, userState)
        End Sub
        
        Private Sub OnReadCLIDsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReadCLIDsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReadCLIDsCompleted(Me, New ReadCLIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/PostFeederSetup", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PostFeederSetup(ByVal dsFeederSetup As System.Data.DataSet, ByVal SAPLogin As SAPLogin) As Boolean
            Dim results() As Object = Me.Invoke("PostFeederSetup", New Object() {dsFeederSetup, SAPLogin})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PostFeederSetupAsync(ByVal dsFeederSetup As System.Data.DataSet, ByVal SAPLogin As SAPLogin)
            Me.PostFeederSetupAsync(dsFeederSetup, SAPLogin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PostFeederSetupAsync(ByVal dsFeederSetup As System.Data.DataSet, ByVal SAPLogin As SAPLogin, ByVal userState As Object)
            If (Me.PostFeederSetupOperationCompleted Is Nothing) Then
                Me.PostFeederSetupOperationCompleted = AddressOf Me.OnPostFeederSetupOperationCompleted
            End If
            Me.InvokeAsync("PostFeederSetup", New Object() {dsFeederSetup, SAPLogin}, Me.PostFeederSetupOperationCompleted, userState)
        End Sub
        
        Private Sub OnPostFeederSetupOperationCompleted(ByVal arg As Object)
            If (Not (Me.PostFeederSetupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PostFeederSetupCompleted(Me, New PostFeederSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/postMachineSetup", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function postMachineSetup(ByVal dsMachineSetup As System.Data.DataSet, ByVal SAPLogin As SAPLogin) As Boolean
            Dim results() As Object = Me.Invoke("postMachineSetup", New Object() {dsMachineSetup, SAPLogin})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub postMachineSetupAsync(ByVal dsMachineSetup As System.Data.DataSet, ByVal SAPLogin As SAPLogin)
            Me.postMachineSetupAsync(dsMachineSetup, SAPLogin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub postMachineSetupAsync(ByVal dsMachineSetup As System.Data.DataSet, ByVal SAPLogin As SAPLogin, ByVal userState As Object)
            If (Me.postMachineSetupOperationCompleted Is Nothing) Then
                Me.postMachineSetupOperationCompleted = AddressOf Me.OnpostMachineSetupOperationCompleted
            End If
            Me.InvokeAsync("postMachineSetup", New Object() {dsMachineSetup, SAPLogin}, Me.postMachineSetupOperationCompleted, userState)
        End Sub
        
        Private Sub OnpostMachineSetupOperationCompleted(ByVal arg As Object)
            If (Not (Me.postMachineSetupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent postMachineSetupCompleted(Me, New postMachineSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/postChangeFeeder", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function postChangeFeeder(ByVal dsMachineSetup As System.Data.DataSet, ByVal NewFeederID As String, ByVal SAPLogin As SAPLogin) As Boolean
            Dim results() As Object = Me.Invoke("postChangeFeeder", New Object() {dsMachineSetup, NewFeederID, SAPLogin})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub postChangeFeederAsync(ByVal dsMachineSetup As System.Data.DataSet, ByVal NewFeederID As String, ByVal SAPLogin As SAPLogin)
            Me.postChangeFeederAsync(dsMachineSetup, NewFeederID, SAPLogin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub postChangeFeederAsync(ByVal dsMachineSetup As System.Data.DataSet, ByVal NewFeederID As String, ByVal SAPLogin As SAPLogin, ByVal userState As Object)
            If (Me.postChangeFeederOperationCompleted Is Nothing) Then
                Me.postChangeFeederOperationCompleted = AddressOf Me.OnpostChangeFeederOperationCompleted
            End If
            Me.InvokeAsync("postChangeFeeder", New Object() {dsMachineSetup, NewFeederID, SAPLogin}, Me.postChangeFeederOperationCompleted, userState)
        End Sub
        
        Private Sub OnpostChangeFeederOperationCompleted(ByVal arg As Object)
            If (Not (Me.postChangeFeederCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent postChangeFeederCompleted(Me, New postChangeFeederCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/GetMachineInfo", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMachineInfo(ByVal MachineID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMachineInfo", New Object() {MachineID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMachineInfoAsync(ByVal MachineID As String)
            Me.GetMachineInfoAsync(MachineID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMachineInfoAsync(ByVal MachineID As String, ByVal userState As Object)
            If (Me.GetMachineInfoOperationCompleted Is Nothing) Then
                Me.GetMachineInfoOperationCompleted = AddressOf Me.OnGetMachineInfoOperationCompleted
            End If
            Me.InvokeAsync("GetMachineInfo", New Object() {MachineID}, Me.GetMachineInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMachineInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMachineInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMachineInfoCompleted(Me, New GetMachineInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/ChangeReelinBank", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChangeReelinBank(ByVal SMTSetupID As String, ByVal OldCLID As String, ByVal NewCLID As String, ByVal Qty As Double, ByVal SAPLogin As SAPLogin) As Boolean
            Dim results() As Object = Me.Invoke("ChangeReelinBank", New Object() {SMTSetupID, OldCLID, NewCLID, Qty, SAPLogin})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChangeReelinBankAsync(ByVal SMTSetupID As String, ByVal OldCLID As String, ByVal NewCLID As String, ByVal Qty As Double, ByVal SAPLogin As SAPLogin)
            Me.ChangeReelinBankAsync(SMTSetupID, OldCLID, NewCLID, Qty, SAPLogin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangeReelinBankAsync(ByVal SMTSetupID As String, ByVal OldCLID As String, ByVal NewCLID As String, ByVal Qty As Double, ByVal SAPLogin As SAPLogin, ByVal userState As Object)
            If (Me.ChangeReelinBankOperationCompleted Is Nothing) Then
                Me.ChangeReelinBankOperationCompleted = AddressOf Me.OnChangeReelinBankOperationCompleted
            End If
            Me.InvokeAsync("ChangeReelinBank", New Object() {SMTSetupID, OldCLID, NewCLID, Qty, SAPLogin}, Me.ChangeReelinBankOperationCompleted, userState)
        End Sub
        
        Private Sub OnChangeReelinBankOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChangeReelinBankCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChangeReelinBankCompleted(Me, New ChangeReelinBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/ChangeReelinTable", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChangeReelinTable(ByVal SMTSetupID As String, ByVal FeederID As String, ByVal Lane As String, ByVal NewCLID As String, ByVal Qty As Double, ByVal SAPLogin As SAPLogin) As Boolean
            Dim results() As Object = Me.Invoke("ChangeReelinTable", New Object() {SMTSetupID, FeederID, Lane, NewCLID, Qty, SAPLogin})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChangeReelinTableAsync(ByVal SMTSetupID As String, ByVal FeederID As String, ByVal Lane As String, ByVal NewCLID As String, ByVal Qty As Double, ByVal SAPLogin As SAPLogin)
            Me.ChangeReelinTableAsync(SMTSetupID, FeederID, Lane, NewCLID, Qty, SAPLogin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangeReelinTableAsync(ByVal SMTSetupID As String, ByVal FeederID As String, ByVal Lane As String, ByVal NewCLID As String, ByVal Qty As Double, ByVal SAPLogin As SAPLogin, ByVal userState As Object)
            If (Me.ChangeReelinTableOperationCompleted Is Nothing) Then
                Me.ChangeReelinTableOperationCompleted = AddressOf Me.OnChangeReelinTableOperationCompleted
            End If
            Me.InvokeAsync("ChangeReelinTable", New Object() {SMTSetupID, FeederID, Lane, NewCLID, Qty, SAPLogin}, Me.ChangeReelinTableOperationCompleted, userState)
        End Sub
        
        Private Sub OnChangeReelinTableOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChangeReelinTableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChangeReelinTableCompleted(Me, New ChangeReelinTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/StartMachine", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StartMachine(ByVal SMTSetupID As String) As Boolean
            Dim results() As Object = Me.Invoke("StartMachine", New Object() {SMTSetupID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub StartMachineAsync(ByVal SMTSetupID As String)
            Me.StartMachineAsync(SMTSetupID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StartMachineAsync(ByVal SMTSetupID As String, ByVal userState As Object)
            If (Me.StartMachineOperationCompleted Is Nothing) Then
                Me.StartMachineOperationCompleted = AddressOf Me.OnStartMachineOperationCompleted
            End If
            Me.InvokeAsync("StartMachine", New Object() {SMTSetupID}, Me.StartMachineOperationCompleted, userState)
        End Sub
        
        Private Sub OnStartMachineOperationCompleted(ByVal arg As Object)
            If (Not (Me.StartMachineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StartMachineCompleted(Me, New StartMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/ClearFeeder", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ClearFeeder(ByVal SMTSetupID As String) As Boolean
            Dim results() As Object = Me.Invoke("ClearFeeder", New Object() {SMTSetupID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ClearFeederAsync(ByVal SMTSetupID As String)
            Me.ClearFeederAsync(SMTSetupID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ClearFeederAsync(ByVal SMTSetupID As String, ByVal userState As Object)
            If (Me.ClearFeederOperationCompleted Is Nothing) Then
                Me.ClearFeederOperationCompleted = AddressOf Me.OnClearFeederOperationCompleted
            End If
            Me.InvokeAsync("ClearFeeder", New Object() {SMTSetupID}, Me.ClearFeederOperationCompleted, userState)
        End Sub
        
        Private Sub OnClearFeederOperationCompleted(ByVal arg As Object)
            If (Not (Me.ClearFeederCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ClearFeederCompleted(Me, New ClearFeederCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/GetOrderInfoFromSAP", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOrderInfoFromSAP(ByVal OrderNo As String) As OrderInfo
            Dim results() As Object = Me.Invoke("GetOrderInfoFromSAP", New Object() {OrderNo})
            Return CType(results(0),OrderInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOrderInfoFromSAPAsync(ByVal OrderNo As String)
            Me.GetOrderInfoFromSAPAsync(OrderNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOrderInfoFromSAPAsync(ByVal OrderNo As String, ByVal userState As Object)
            If (Me.GetOrderInfoFromSAPOperationCompleted Is Nothing) Then
                Me.GetOrderInfoFromSAPOperationCompleted = AddressOf Me.OnGetOrderInfoFromSAPOperationCompleted
            End If
            Me.InvokeAsync("GetOrderInfoFromSAP", New Object() {OrderNo}, Me.GetOrderInfoFromSAPOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOrderInfoFromSAPOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOrderInfoFromSAPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOrderInfoFromSAPCompleted(Me, New GetOrderInfoFromSAPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/SaveSMTMaster", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveSMTMaster(ByVal machinStr As Machine, ByVal feederStr As Feeder, ByVal feedertypeStr As FeederTypestr, ByVal flag As String, ByVal SAPLoginData As SAPLogin) As String
            Dim results() As Object = Me.Invoke("SaveSMTMaster", New Object() {machinStr, feederStr, feedertypeStr, flag, SAPLoginData})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveSMTMasterAsync(ByVal machinStr As Machine, ByVal feederStr As Feeder, ByVal feedertypeStr As FeederTypestr, ByVal flag As String, ByVal SAPLoginData As SAPLogin)
            Me.SaveSMTMasterAsync(machinStr, feederStr, feedertypeStr, flag, SAPLoginData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveSMTMasterAsync(ByVal machinStr As Machine, ByVal feederStr As Feeder, ByVal feedertypeStr As FeederTypestr, ByVal flag As String, ByVal SAPLoginData As SAPLogin, ByVal userState As Object)
            If (Me.SaveSMTMasterOperationCompleted Is Nothing) Then
                Me.SaveSMTMasterOperationCompleted = AddressOf Me.OnSaveSMTMasterOperationCompleted
            End If
            Me.InvokeAsync("SaveSMTMaster", New Object() {machinStr, feederStr, feedertypeStr, flag, SAPLoginData}, Me.SaveSMTMasterOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveSMTMasterOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveSMTMasterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveSMTMasterCompleted(Me, New SaveSMTMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/GetSpec", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSpec(ByVal flag As Integer, ByVal search As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetSpec", New Object() {flag, search})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSpecAsync(ByVal flag As Integer, ByVal search As String)
            Me.GetSpecAsync(flag, search, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSpecAsync(ByVal flag As Integer, ByVal search As String, ByVal userState As Object)
            If (Me.GetSpecOperationCompleted Is Nothing) Then
                Me.GetSpecOperationCompleted = AddressOf Me.OnGetSpecOperationCompleted
            End If
            Me.InvokeAsync("GetSpec", New Object() {flag, search}, Me.GetSpecOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSpecOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSpecCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSpecCompleted(Me, New GetSpecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/GetID", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetID() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetID", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetIDAsync()
            Me.GetIDAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetIDAsync(ByVal userState As Object)
            If (Me.GetIDOperationCompleted Is Nothing) Then
                Me.GetIDOperationCompleted = AddressOf Me.OnGetIDOperationCompleted
            End If
            Me.InvokeAsync("GetID", New Object(-1) {}, Me.GetIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetIDCompleted(Me, New GetIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/GetMachine", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMachine(ByVal search As String) As Machine
            Dim results() As Object = Me.Invoke("GetMachine", New Object() {search})
            Return CType(results(0),Machine)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMachineAsync(ByVal search As String)
            Me.GetMachineAsync(search, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMachineAsync(ByVal search As String, ByVal userState As Object)
            If (Me.GetMachineOperationCompleted Is Nothing) Then
                Me.GetMachineOperationCompleted = AddressOf Me.OnGetMachineOperationCompleted
            End If
            Me.InvokeAsync("GetMachine", New Object() {search}, Me.GetMachineOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMachineOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMachineCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMachineCompleted(Me, New GetMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/GetFeeder", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFeeder(ByVal search As String) As Feeder
            Dim results() As Object = Me.Invoke("GetFeeder", New Object() {search})
            Return CType(results(0),Feeder)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFeederAsync(ByVal search As String)
            Me.GetFeederAsync(search, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFeederAsync(ByVal search As String, ByVal userState As Object)
            If (Me.GetFeederOperationCompleted Is Nothing) Then
                Me.GetFeederOperationCompleted = AddressOf Me.OnGetFeederOperationCompleted
            End If
            Me.InvokeAsync("GetFeeder", New Object() {search}, Me.GetFeederOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFeederOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFeederCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFeederCompleted(Me, New GetFeederCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/GetFeederType", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFeederType(ByVal search As String) As FeederTypestr
            Dim results() As Object = Me.Invoke("GetFeederType", New Object() {search})
            Return CType(results(0),FeederTypestr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFeederTypeAsync(ByVal search As String)
            Me.GetFeederTypeAsync(search, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFeederTypeAsync(ByVal search As String, ByVal userState As Object)
            If (Me.GetFeederTypeOperationCompleted Is Nothing) Then
                Me.GetFeederTypeOperationCompleted = AddressOf Me.OnGetFeederTypeOperationCompleted
            End If
            Me.InvokeAsync("GetFeederType", New Object() {search}, Me.GetFeederTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFeederTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFeederTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFeederTypeCompleted(Me, New GetFeederTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/SaveFeederType", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveFeederType(ByVal mydataset As System.Data.DataSet, ByVal machinStr As Machine, ByVal feederStr As Feeder, ByVal feedertypeStr As FeederTypestr, ByVal SAPLoginData As SAPLogin) As String
            Dim results() As Object = Me.Invoke("SaveFeederType", New Object() {mydataset, machinStr, feederStr, feedertypeStr, SAPLoginData})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveFeederTypeAsync(ByVal mydataset As System.Data.DataSet, ByVal machinStr As Machine, ByVal feederStr As Feeder, ByVal feedertypeStr As FeederTypestr, ByVal SAPLoginData As SAPLogin)
            Me.SaveFeederTypeAsync(mydataset, machinStr, feederStr, feedertypeStr, SAPLoginData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveFeederTypeAsync(ByVal mydataset As System.Data.DataSet, ByVal machinStr As Machine, ByVal feederStr As Feeder, ByVal feedertypeStr As FeederTypestr, ByVal SAPLoginData As SAPLogin, ByVal userState As Object)
            If (Me.SaveFeederTypeOperationCompleted Is Nothing) Then
                Me.SaveFeederTypeOperationCompleted = AddressOf Me.OnSaveFeederTypeOperationCompleted
            End If
            Me.InvokeAsync("SaveFeederType", New Object() {mydataset, machinStr, feederStr, feedertypeStr, SAPLoginData}, Me.SaveFeederTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveFeederTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveFeederTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveFeederTypeCompleted(Me, New SaveFeederTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/GetFileList", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileList() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetFileList", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileListAsync()
            Me.GetFileListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileListAsync(ByVal userState As Object)
            If (Me.GetFileListOperationCompleted Is Nothing) Then
                Me.GetFileListOperationCompleted = AddressOf Me.OnGetFileListOperationCompleted
            End If
            Me.InvokeAsync("GetFileList", New Object(-1) {}, Me.GetFileListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileListCompleted(Me, New GetFileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/GetFileInfo", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileInfo(ByVal SetupFile As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetFileInfo", New Object() {SetupFile})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileInfoAsync(ByVal SetupFile As String)
            Me.GetFileInfoAsync(SetupFile, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileInfoAsync(ByVal SetupFile As String, ByVal userState As Object)
            If (Me.GetFileInfoOperationCompleted Is Nothing) Then
                Me.GetFileInfoOperationCompleted = AddressOf Me.OnGetFileInfoOperationCompleted
            End If
            Me.InvokeAsync("GetFileInfo", New Object() {SetupFile}, Me.GetFileInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileInfoCompleted(Me, New GetFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eTrace_SMT/eTraceSMTService/Del_SMTMaster", RequestNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", ResponseNamespace:="http://tempuri.org/eTrace_SMT/eTraceSMTService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Del_SMTMaster(ByVal DelValue As String, ByVal flag As Integer) As String
            Dim results() As Object = Me.Invoke("Del_SMTMaster", New Object() {DelValue, flag})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Del_SMTMasterAsync(ByVal DelValue As String, ByVal flag As Integer)
            Me.Del_SMTMasterAsync(DelValue, flag, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Del_SMTMasterAsync(ByVal DelValue As String, ByVal flag As Integer, ByVal userState As Object)
            If (Me.Del_SMTMasterOperationCompleted Is Nothing) Then
                Me.Del_SMTMasterOperationCompleted = AddressOf Me.OnDel_SMTMasterOperationCompleted
            End If
            Me.InvokeAsync("Del_SMTMaster", New Object() {DelValue, flag}, Me.Del_SMTMasterOperationCompleted, userState)
        End Sub
        
        Private Sub OnDel_SMTMasterOperationCompleted(ByVal arg As Object)
            If (Not (Me.Del_SMTMasterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Del_SMTMasterCompleted(Me, New Del_SMTMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/eTrace_SMT/eTraceSMTService")>  _
    Partial Public Class SAPLogin
        
        Private serverField As String
        
        Private userField As String
        
        Private pWDField As String
        
        '''<remarks/>
        Public Property Server() As String
            Get
                Return Me.serverField
            End Get
            Set
                Me.serverField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property User() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PWD() As String
            Get
                Return Me.pWDField
            End Get
            Set
                Me.pWDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/eTrace_SMT/eTraceSMTService")>  _
    Partial Public Class FeederTypestr
        
        Private feederTypeField As String
        
        Private descriptionField As String
        
        '''<remarks/>
        Public Property FeederType() As String
            Get
                Return Me.feederTypeField
            End Get
            Set
                Me.feederTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/eTrace_SMT/eTraceSMTService")>  _
    Partial Public Class Feeder
        
        Private feederIDField As String
        
        Private feederSpecField As String
        
        Private maxLanesField As Double
        
        Private productionLineField As String
        
        Private remarksField As String
        
        '''<remarks/>
        Public Property FeederID() As String
            Get
                Return Me.feederIDField
            End Get
            Set
                Me.feederIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FeederSpec() As String
            Get
                Return Me.feederSpecField
            End Get
            Set
                Me.feederSpecField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaxLanes() As Double
            Get
                Return Me.maxLanesField
            End Get
            Set
                Me.maxLanesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductionLine() As String
            Get
                Return Me.productionLineField
            End Get
            Set
                Me.productionLineField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Remarks() As String
            Get
                Return Me.remarksField
            End Get
            Set
                Me.remarksField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/eTrace_SMT/eTraceSMTService")>  _
    Partial Public Class Machine
        
        Private machineIDField As String
        
        Private manufacturerField As String
        
        Private modelField As String
        
        Private multipleBanksField As Boolean
        
        Private daulTablesField As Boolean
        
        Private productionLineField As String
        
        Private remarksField As String
        
        '''<remarks/>
        Public Property MachineID() As String
            Get
                Return Me.machineIDField
            End Get
            Set
                Me.machineIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Manufacturer() As String
            Get
                Return Me.manufacturerField
            End Get
            Set
                Me.manufacturerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Model() As String
            Get
                Return Me.modelField
            End Get
            Set
                Me.modelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MultipleBanks() As Boolean
            Get
                Return Me.multipleBanksField
            End Get
            Set
                Me.multipleBanksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaulTables() As Boolean
            Get
                Return Me.daulTablesField
            End Get
            Set
                Me.daulTablesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductionLine() As String
            Get
                Return Me.productionLineField
            End Get
            Set
                Me.productionLineField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Remarks() As String
            Get
                Return Me.remarksField
            End Get
            Set
                Me.remarksField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2053.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/eTrace_SMT/eTraceSMTService")>  _
    Partial Public Class OrderInfo
        
        Private matlNoField As String
        
        Private matlDescField As String
        
        Private orderQtyField As Double
        
        Private openQtyField As Double
        
        Private startDateField As Date
        
        Private errorMsgField As String
        
        '''<remarks/>
        Public Property MatlNo() As String
            Get
                Return Me.matlNoField
            End Get
            Set
                Me.matlNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MatlDesc() As String
            Get
                Return Me.matlDescField
            End Get
            Set
                Me.matlDescField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OrderQty() As Double
            Get
                Return Me.orderQtyField
            End Get
            Set
                Me.orderQtyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OpenQty() As Double
            Get
                Return Me.openQtyField
            End Get
            Set
                Me.openQtyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartDate() As Date
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMsg() As String
            Get
                Return Me.errorMsgField
            End Get
            Set
                Me.errorMsgField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub ErrorLoggingCompletedEventHandler(ByVal sender As Object, ByVal e As ErrorLoggingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ErrorLoggingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub GetFeederInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetFeederInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFeederInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub ClearFeederInfoCompletedEventHandler(ByVal sender As Object, ByVal e As ClearFeederInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ClearFeederInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub ReadCLIDsCompletedEventHandler(ByVal sender As Object, ByVal e As ReadCLIDsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReadCLIDsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub PostFeederSetupCompletedEventHandler(ByVal sender As Object, ByVal e As PostFeederSetupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PostFeederSetupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub postMachineSetupCompletedEventHandler(ByVal sender As Object, ByVal e As postMachineSetupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class postMachineSetupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub postChangeFeederCompletedEventHandler(ByVal sender As Object, ByVal e As postChangeFeederCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class postChangeFeederCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub GetMachineInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetMachineInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMachineInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub ChangeReelinBankCompletedEventHandler(ByVal sender As Object, ByVal e As ChangeReelinBankCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChangeReelinBankCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub ChangeReelinTableCompletedEventHandler(ByVal sender As Object, ByVal e As ChangeReelinTableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChangeReelinTableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub StartMachineCompletedEventHandler(ByVal sender As Object, ByVal e As StartMachineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StartMachineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub ClearFeederCompletedEventHandler(ByVal sender As Object, ByVal e As ClearFeederCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ClearFeederCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub GetOrderInfoFromSAPCompletedEventHandler(ByVal sender As Object, ByVal e As GetOrderInfoFromSAPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOrderInfoFromSAPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As OrderInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),OrderInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub SaveSMTMasterCompletedEventHandler(ByVal sender As Object, ByVal e As SaveSMTMasterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveSMTMasterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub GetSpecCompletedEventHandler(ByVal sender As Object, ByVal e As GetSpecCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSpecCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub GetIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub GetMachineCompletedEventHandler(ByVal sender As Object, ByVal e As GetMachineCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMachineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Machine
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Machine)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub GetFeederCompletedEventHandler(ByVal sender As Object, ByVal e As GetFeederCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFeederCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Feeder
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Feeder)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub GetFeederTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetFeederTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFeederTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FeederTypestr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FeederTypestr)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub SaveFeederTypeCompletedEventHandler(ByVal sender As Object, ByVal e As SaveFeederTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveFeederTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub GetFileListCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub GetFileInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")>  _
    Public Delegate Sub Del_SMTMasterCompletedEventHandler(ByVal sender As Object, ByVal e As Del_SMTMasterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Del_SMTMasterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
